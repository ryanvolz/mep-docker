services:
  icarus:
    image: randyherban/icarus:latest
    platform: linux/arm64/v8
    env_file: ".env"
    volumes:
      #- ./icarus/system.json:/opt/radiohound/icarus/system.json
      - /data/ringbuffer:/data/ringbuffer
    network_mode: "host"
    container_name: "icarus"
    restart: unless-stopped

  radiohound_web:
    image: randyherban/radiohound_web:latest
    platform: linux/arm64/v8
    env_file: ".env"
    network_mode: "host"
    container_name: "radiohound_web"
    restart: unless-stopped

  radiohound_app:
    image: randyherban/radiohound_app:latest
    platform: linux/arm64/v8
    env_file: ".env"
    network_mode: "host"
    container_name: "radiohound_app"
    restart: unless-stopped

  mqtt:
    image: "eclipse-mosquitto"
    container_name: "mqtt"
    restart: unless-stopped
    ports:
      - "1883:1883"
    volumes:
      - ./mosquitto:/etc/mosquitto
      - ./mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf

  mongodb:
    image: "mongodb/mongodb-community-server"
    container_name: "mongodb"
    restart: unless-stopped
    ports:
      - 27017:27017
    volumes:
        - mongodb:/data/db
    env_file: ".env"
    networks:
      - mongodb

  fft:
    image: randyherban/fft:latest
    platform: linux/arm64/v8
    env_file: ".env"
    container_name: fft
    restart: unless-stopped
    network_mode: host
    volumes:
      - /data/ringbuffer:/data/ringbuffer

  recorder:
    image: ghcr.io/ryanvolz/mep-recorder:latest
    build: ./recorder
    container_name: recorder
    environment:
      - HOLOSCAN_EXECUTOR_LOG_LEVEL=WARN
      - HOLOSCAN_LOG_LEVEL=INFO
      - HOLOSCAN_LOG_FORMAT=DEFAULT
      - PYTHONUNBUFFERED=1
    networks:
      - default
      - rfsoc_10GbE
    ports:
      - 60133:60133/udp
    restart: unless-stopped
    runtime: nvidia
    tmpfs:
      - /ramdisk:mode=777,uid=${UID},gid=${GID},nodev,nosuid,noexec,size=1G
    user: ${UID}:${GID}
    volumes:
      - /data/ringbuffer:/data/ringbuffer

volumes:
    mongodb:

networks:
  mongodb:
  rfsoc_10GbE:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.host_binding_ipv4: "192.168.4.1"
      com.docker.network.driver.mtu: 9000
